#+Title: Inference from the Apache benchmark test 
#+Date: JAnuary 5, 2016
#+Author: VLEAD Systems 


* Introduction 
  This document refers the raw data fetched from the Apache benchmark test.
  

* Test Procedure and details 
  + Tool used :: Apache benchmark 
  + Test Subject :: Open edX on portable media and Host Server
  + No of labs running :: 1 Lab was running and rest of them were turned off.
  + Apache benchmark simulates requests to a particular URL or web page. 
  + Sample command 
    #+BEGIN_SRC 
    ab -c 10 -n 500 http://open-edx.vlabs.ac.in/
    #+END_SRC
  + The above command throws 500 total requests to the URL http://open-edx.vlabs.ac.in
  + Here, -c is the number of concurrent requests at an instance of time 
  + Here, -n is the number of total requests made to the server.


* Understanding the sample results -
  + Command used 
    #+BEGIN_SRC 
    ab -c 10 -n 1000 http://open-edx.vlabs.ac.in
    #+END_SRC
  + Sample output snippet obtained . 
    #+BEGIN_SRC
     Concurrency Level:      10  
     Time taken for tests:   35.868 seconds
     Complete requests:      1000
     Failed requests:        0
     Time per request:       358.676 [ms] (mean)
     Time per request:       35.868 [ms]
    #+END_SRC
  + Explaination for the above terms ::
    + Concurrency level ::
         Number of requests at an instance of time. This can be
         considered as number of users making a request at an instance
         of time, where each user make a single request.
    + Time taken for tests ::
         This is the time taken to complete the test. 
         = Time at which last request was made - Time at which first request was made.
    + Complete Requests ::
      Number of requests which resulted into 200,201,404 error code. 
    + Failed Requests ::
      Number of requests which resulted into 503 - Service not available.
    + Time per request (1) ::
      Mean time taken to serve one set of concurrent request.
      For example if c = 10 and n = 100, we have 10 concurrent sets.
    + Time per request (2) ::
      Mean time taken to server one request out of concurrency set.
      For example, if c = 10, then it is one concurrency set.
  
* Raw Data 
  + [[./benchmark-test-2017-01-05.org]]
  
* Observation table 
  
  |------+-------------------+---------------------+---------------------------+-----------------|
  | S.No | Concurrency Level | Number of Completed |     Mean Time per request |   Mean Time per |
  |      |                   |            requests | (Concurrency set) (in ms) | request (in ms) |
  |------+-------------------+---------------------+---------------------------+-----------------|
  |    1 |                10 |                1500 |                   385.389 |          38.539 |
  |------+-------------------+---------------------+---------------------------+-----------------|
  |    2 |                20 |                1500 |                   637.608 |          31.880 |
  |------+-------------------+---------------------+---------------------------+-----------------|
  |    3 |                30 |                1500 |                   924.007 |          30.800 |
  |------+-------------------+---------------------+---------------------------+-----------------|
  |    4 |                40 |                1500 |                  1157.073 |          28.927 |
  |------+-------------------+---------------------+---------------------------+-----------------|
  |    5 |                50 |                1500 |                  1641.742 |          32.835 |
  |------+-------------------+---------------------+---------------------------+-----------------|
  |    6 |                60 |                1500 |                  1812.347 |          30.206 |
  |------+-------------------+---------------------+---------------------------+-----------------|
 
  + Each row in the above obeservation table display the result of test with various concurrencly level. 
  + Each row can be read as given below - 
  #+BEGIN_SRC 
  When 10 requests are sent to http://open-edx.vlabs.ac.in/ at a time instance t1, it took 3285.389 ms to complete 10 requests.
  Total 1500 rquests were sent in burst of 10. On an average each request takes 38.539 ms.
  #+END_SRC


* Inference
** Assumtions 
  + Its quite likely that web caching at reverse proxy might have
    resulted into faster response.
  
  + Based on the above output, it can be assured that 30/40 people can
    use College cloud with enough performance.
  + Using Sar command on host machine hosting labs and open edx, Memory
    (RAM) was observed to be used only upto 39.11 %
  + Observation on Nagios monitoring said 50% utilization.

* References 
  https://www.mnot.net/cache_docs/
