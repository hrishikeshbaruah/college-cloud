#+TITLE: Virtual Labs College Cloud Edition Performance testing - CPU Testing
#+DATE: [2017-04-24]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-1.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export


* Introduction
  This document is a Test Suite for multiple test cases with clear
  objectives and inferences defined for each test performed.


* Test Suite : CPU Testing (Full version of College Cloud Edition)
** Introduction    
  |-----------------------+-----------------------------------------------------------------|
  | Id, Name              | PTEST-FULLCC-001 (Performance Test full CC)                     |
  |-----------------------+-----------------------------------------------------------------|
  | Overall Objective(s)  | To identify the following                                       |
  |                       | a. CPU utilization                                              |
  |                       | b. Swap IO time                                                 |
  |                       | c. Wait time                                                    |
  |                       | d. Page faults                                                  |
  |                       | e. context switches                                             |
  |                       | d. Memory (RAM) utilization                                     |
  |-----------------------+-----------------------------------------------------------------|
  | Description           | In having multiple different scenarios,                         |
  |                       | testing college cloud for above given parameters .              |
  |                       | Description for individual tests will be given in               |
  |                       | each test section.                                              |
  |-----------------------+-----------------------------------------------------------------|
  | Configuration/Context | a. College cloud full version (running from single machine)     |
  |                       | b. College cloud Split version (running from diffrent machines) |
  |                       | c. Variable load                                                |
  |-----------------------+-----------------------------------------------------------------|

** System Configuration/Context for below test cases
    + Full CC version 
    + Open edX running 
    + All components running from a single machine
    + 16 GB RAM / I7 

      
* Test cases 

** PTEST-FULLCC-001 : TEST01 - vmstat - No load
*** Objective(s)
    To identify the following stats - 
    + CPU run queues
    + Swap in/out
    + Wait time for IO 
    + Memory (RAM) utilization

    when no load on College Cloud and running cluster components.

    + NOTE :: *no load* means, no user requests on college cloud


*** Description
    [[http://www.linuxcommand.org/man_pages/vmstat8.html][vmstat]] - Virtual memory stats is a command to get summary
    information on Memory, Processess, CPU, Paging etc.
    
    + Boot CC normally
    + Use the command given below to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB


*** Performance measurements
    + CPU utilization / unit
    + Memory utilization / unit
   

*** RUN 1: vmstat - No load
    + [[./raw-data/no-load-run-1-vagrant-up.txt][Raw-Data]]
    + Graph-01 Free RAM / IDLE RAM graph
      The graph given below infers the following -
      + Free RAM / Idle RAM captured at an instance of test. (There
        were 1200 test instances since we ran =vmstat 1 1200 -n -w -S
        M= command for 1200 seconds). To understand =vmstat= command,
        please look at [[./manuals/command-manuals.org][this example]]
      + Value for FREE RAM is graphed below -
         |------+-------------|
         | Stat | RAM (in MB) |
         |------+-------------|
         | Max  |        6904 |
         |------+-------------|
         | Min  |        6821 |
         |------+-------------|
         
      [[./graphs/free-ram-graph.png]]

    + Graph-02 Number of processes waiting for runtime 
      The graph given below infers the following -
      + Number of processes waiting for runtime at an instance of test.
     
      [[./graphs/no-of-process-waiting-for-runtime-no-load.png]]

    + Graph-03 IDLE CPU at an instance of test 
      The graph given below inferes the following -
      + IDLE CPU percentage at an instance of test. 
        [[graphs/idle-cpu.png]]

*** RUN 2: vmstat - Simple load( 20 concurrent user requests on one lab for 20 minutes)
    + Boot CC normally 
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below on CC machine  to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
      - To understand =vmstat= command, please look at [[./manuals/command-manuals.org][this example]]
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 20 -r 1 -t 20M http://cse01-iiith.vlabs.ac.in/
      #+END_SRC
    + Output of the above command can be found at [[./raw-data/one-lab-20-concurrent-requests-20min-siege.txt][Raw-Data]]

         
*** RUN 3: vmstat - 50 concurrent user requests on one lab for 20 minutes
    + Boot CC normally 
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below on CC machine  to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
      - To understand =vmstat= command, please look at [[./manuals/command-manuals.org][this example]]
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -r 1 -t 20M http://cse01-iiith.vlabs.ac.in/
      #+END_SRC
    + Output of the above command can be found at [[./raw-data/one-lab-20-concurrent-requests-20min-siege.txt][Raw-Data]]

         
*** RUN 4: vmstat - 50 concurrent user requests on edx platform for 20 minutes
    + Boot CC normally 
    + Make sure edx platform is up and running.
      - If edx platform is not running,then run the below commands
        from =vlabs= user account
	#+BEGIN_EXAMPLE
        cd vagrant-boxes
        vagrant up
        vagrant up --provision
	#+END_EXAMPLE
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below on CC machine  to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
      - To understand =vmstat= command, please look at [[./manuals/command-manuals.org][this example]]
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -t 20M http://vlabs.ac.in/
      #+END_SRC
    + Output of the above command can be found at [[./raw-data/edx-home-page-one-lab-50-concurrent-users-requests-20min.txt][Raw-Data]]

         
*** RUN 5: vmstat - 50 concurrent user requests on feedback-service for 20 minutes
    + Boot CC normally 
    + Make sure feedback service/container is up and running.
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below on CC machine  to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
      - To understand =vmstat= command, please look at [[./manuals/command-manuals.org][this example]]
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -t 20M http://feedback.vlabs.ac.in/
      #+END_SRC
    + Output of the above command can be found at [[./raw-data/feedback-plus-onelab-50-concurrent-users-requests-20min.txt][Raw-Data]]

         

** PTEST-FULLCC-001 : TEST02 - mpstat + vmstat - No load
*** Objective(s)
    To identify the following stats - 
    + CPU run queues
    + Swap in/out
    + Wait time for IO 
    + Memory (RAM) utilization


*** Description
    Identify processors utilization using *mpstat* command line tool.
    *mpstat* - Report processors related statistics.
    
    + Use the command given below to get statistics of all available
      processors
      #+BEGIN_SRC command
      mpstat 1 -P ALL 1200
      #+END_SRC
    + This command runs for 1200 records/times and returns processors
      utilization output on screen every one second.
      - [[./index.org::#understand_mpstat][mpstat help manual is here]]


*** Performance measurements
    + CPU utilization / unit
   

*** RUN 1 : mpstat + vmstat - No load
    + Boot CC normally 
    + Use the commands given below on CC machine  to get statistics.
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -s M & 
      mpstat 1 -P ALL 1200 &
      #+END_SRC
      - To understand =mpstat= and =vmstat= commands, please look at
        [[./manuals/command-manuals.org][mpstat and vmstat help manual]]
    + Output of the =vmstat= command can be found at [[./raw-data/test-case2/test-case2-vmstat-run1.txt][vmstat-raw-data]]
    + Output of the =mpstat= command can be found at [[./raw-data/test-case2/test-case2-mpstat-run1.txt][mpstat-raw-data]]

*** RUN 2 : mpstat + mpstat - Simple load( 20 concurrent user requests on one lab for 20 minutes
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the commands given below on CC machine  to get statistics.
      #+BEGIN_SRC command
      mpstat 1 -P ALL 1200 
      vmstat 1 1200 -n -w -s M 
      #+END_SRC
      - To understand =mpstat= and =vmstat= commands, please look at
        [[./manuals/command-manuals.org][mpstat and vmstat help manual]]
    + Output of the =mpstat= command can be found at [[./raw-data/test-case2/test-case2-mpstat-run2.txt][mpstat-raw-data]]
    + Output of the =vmstat= command can be found at [[./raw-data/test-case2/test-case2-vmstat-run2.txt][vmstat-raw-data]]
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 20 -t 20M http://cse01-iiith.vlabs.ac.in/
      #+END_SRC
      - Look at [[./manuals/command-manuals.org][siege help manual]]
    + Output of the above siege command can be found at [[./raw-data/test-case2/test-case2-mpstat-vmstat-run2-siege.txt][siege-raw-data]]


*** RUN 3 : mpstat + vmstat - 50 concurrent user requests on one lab for 20 minutes
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the commands given below on CC machine  to get statistics.
      #+BEGIN_SRC command
      mpstat 1 -P ALL 1200 
      vmstat 1 1200 -n -w -s M 
      #+END_SRC
      - To understand =mpstat= and =vmstat= commands, please look at
        [[./manuals/command-manuals.org][mpstat and vmstat help manual]]
    + Output of the =mpstat= command can be found at [[./raw-data/test-case2/test-case2-mpstat-run3.txt][mpstat-raw-data]]
    + Output of the =vmstat= command can be found at [[./raw-data/test-case2/test-case2-vmstat-run3.txt][vmstat-raw-data]]
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -t 20M http://cse01-iiith.vlabs.ac.in/
      #+END_SRC
      - Look at [[./manuals/command-manuals.org][siege help manual]]
    + Output of the above siege command can be found at [[./raw-data/test-case2/test-case2-mpstat-vmstat-run3-siege.txt][siege-raw-data]]


*** RUN 4 : mpstat + mpstat - 50 concurrent user requests on edx platform for 20 minutes
    + Make sure edx platform is up and running.
      - If edx platform is not running,then run the below commands
        from =vlabs= user account
	#+BEGIN_EXAMPLE
        cd vagrant-boxes
        vagrant up
        vagrant up --provision
	#+END_EXAMPLE
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the commands given below on CC machine  to get statistics.
      #+BEGIN_SRC command
      mpstat 1 -P ALL 1200 
      vmstat 1 1200 -n -w -s M 
      #+END_SRC
      - To understand =mpstat= and =vmstat= commands, please look at
        [[./manuals/command-manuals.org][mpstat and vmstat help manual]]
    + Output of the =mpstat= command can be found at [[./raw-data/test-case2/test-case2-mpstat-run4.txt][mpstat-raw-data]]
    + Output of the =vmstat= command can be found at [[./raw-data/test-case2/test-case2-vmstat-run4.txt][vmstat-raw-data]]
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -t 20M http://vlabs.ac.in/
      #+END_SRC
      - Look at [[./manuals/command-manuals.org][siege help manual]]
    + Output of the above siege command can be found at [[./raw-data/test-case2/test-case2-mpstat-vmstat-run4-siege.txt][siege-raw-data]]


*** RUN 5 : mpstat + mpstat - 50 concurrent user requests on feedback for 20 minutes
    + Start feedback service container if not started
      #+BEGIN_SRC 
      vzctl start 278
      #+END_SRC
    + Start one lab container if not started 
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the commands given below on CC machine  to get statistics.
      #+BEGIN_SRC command
      mpstat 1 -P ALL 1200 
      vmstat 1 1200 -n -w -s M 
      #+END_SRC
      - To understand =mpstat= and =vmstat= commands, please look at
        [[./manuals/command-manuals.org][mpstat and vmstat help manual]]
    + Output of the =mpstat= command can be found at [[./raw-data/test-case2/test-case2-mpstat-run5.txt][mpstat-raw-data]]
    + Output of the =vmstat= command can be found at [[./raw-data/test-case2/test-case2-vmstat-run5.txt][vmstat-raw-data]]
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -t 20M http://feedback.vlabs.ac.in/
      #+END_SRC
      - Look at [[./manuals/command-manuals.org][siege help manual]]
    + Output of the above siege command can be found at [[./raw-data/test-case2/test-case2-mpstat-vmstat-run5-siege.txt][siege-raw-data]]

** PTEST_FULLCC-002 : TEST03 - mpstat + vmstat + page faults
*** Objective(s)
     To identify the following stats - 
     + CPU run queues
     + Swap in/out
     + Wait time for IO 
     + Memory (RAM) utilization
     + Processors utilization
     + Page Faults


*** Description
    Identify processors utilization using *mpstat* command line tool.
    *mpstat* - Report processors related statistics.

    + Use the command given below to get statistics of all available
      processors
      #+BEGIN_SRC command
      mpstat 1 -P ALL 1200
      #+END_SRC


    Identify Virtual memory stats using vmstat command.
    
    [[http://www.linuxcommand.org/man_pages/vmstat8.html][vmstat]] - Virtual memory stats, is a command to get summary
    information on Memory, Processess, CPU, Paging etc.

    + Use the command given below to get statistics
      #+BEGIN_SRC command
      vmstat -n -w -S M 1 1200
      #+END_SRC

    Identify page faults as well using *sar* command 
    + Use the command given below to get page faults
      #+BEGIN_SRC command
      sar -B 1 1200
      #+END_SRC
    + [[./index.org::#understand_mpstat][mpstat + vmstat help manual is here]]


*** RUN 1 :: Two labs, edx platform and cluster containers running
    1. Started two lab containers on college cloud
    2. started edx platform
    3. All other cluster component server containers are running
    4. Now, take the following urls of the labs and vlabs-home page.
       #+BEGIN_EXAMPLE
       http://vlabs.ac.in/
       http://mfs-iiith.vlabs.ac.in/exp1/simulation/mfs_exp1.html
       http://mfs-iiith.vlabs.ac.in/exp2/simulation/mfs_exp2b.html
       http://cse01-iiith.vlabs.ac.in/exp1/UnarySystem.html
       http://cse01-iiith.vlabs.ac.in/exp1/RomanSystem.html
       http://cse01-iiith.vlabs.ac.in/exp3/quick.html
       http://cse01-iiith.vlabs.ac.in/exp3/merge.html
       #+END_EXAMPLE
    5. And now, add them to =/etc/siege/urls.txt= file on a machine
       from where siege command would be running.

    6. Run the below script =load.sh= on college cloud machine
       #+BEGIN_SRC 
       ###this script collects all stats( vmstats, mpstats and page faults at a time on the basis of load put by siege command
       ### following urls added to =/etc/siege/urls.txt= file (without commenting the lines) on a machine
       from where siege command will run.
       #http://vlabs.ac.in/
       #http://mfs-iiith.vlabs.ac.in/exp1/simulation/mfs_exp1.html
       #http://mfs-iiith.vlabs.ac.in/exp2/simulation/mfs_exp2b.html
       #http://cse01-iiith.vlabs.ac.in/exp1/UnarySystem.html
       #http://cse01-iiith.vlabs.ac.in/exp1/RomanSystem.html
       #http://cse01-iiith.vlabs.ac.in/exp3/quick.html
       #http://cse01-iiith.vlabs.ac.in/exp3/merge.html
   
       #### Collect page faults 
       sar -B 1 1200 > twolabs-edxhomepage-page_faults.txt
       #### Collect Virtual Memory status 
       vmstat 1 1200 -n -w -S M > twolabs-edxhomepage-vmstat.txt
       #### Collect processors statistics 
       mpstat -P ALL 1 1200 > twolabs-edxhomepage-mpstat.txt
       #+END_SRC
    7. Now, siege command shown below along with the above script. 6
       and 7 both should run at a time. Put load on the lab using
       *siege* command. Run the below command from different machine
       which is connected to CC through LAN
       #+BEGIN_EXAMPLE
       siege -c50 -t20M -v 
       #+END_EXAMPLE
    8. Output of the =mpstat= command can be found at [[./raw-data/twolabs-edxhomepage-mpstat.txt][mpstat-raw-data]]
    9. Output of the =vmstat= command can be found at [[./raw-data/twolabs-edxhomepage-vmstat.txt][vmstat-raw-data]]
    10. Output of the =sar= command can be found at [[./raw-data/twolabs-edxhomepage-page_faults.txt][sar-raw-data]]


    
