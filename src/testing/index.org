#+TITLE: Virtual Labs College Cloud Edition Performance testing - CPU Testing
#+DATE: [2017-04-24]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ./org-templates/level-1.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export


* Introduction
  This document is a Test Suite for multiple test cases with clear
  objectives and inferences defined for each test performed.


* Test Suite : CPU Testing (Full version of College Cloud Edition)
** Introduction    
  |-----------------------+-----------------------------------------------------------------|
  | Id, Name              | PTEST-FULLCC-001 (Performance Test full CC)                     |
  |-----------------------+-----------------------------------------------------------------|
  | Overall Objective(s)  | To identify the following                                       |
  |                       | a. CPU utilization                                              |
  |                       | b. Swap IO time                                                 |
  |                       | c. Wait time                                                    |
  |                       | d. Page faults                                                  |
  |                       | e. context switches                                             |
  |                       | d. Memory (RAM) utilization                                     |
  |-----------------------+-----------------------------------------------------------------|
  | Description           | In having multiple different scenarios,                         |
  |                       | testing college cloud for above given parameters .              |
  |                       | Description for individual tests will be given in               |
  |                       | each test section.                                              |
  |-----------------------+-----------------------------------------------------------------|
  | Configuration/Context | a. College cloud full version (running from single machine)     |
  |                       | b. College cloud Split version (running from diffrent machines) |
  |                       | c. Variable load                                                |
  |-----------------------+-----------------------------------------------------------------|

** System Configuration/Context for below test cases
    + Full CC version 
    + Open edX running 
    + All components running from a single machine
    + 16 GB RAM / I7 

** Understanding sample output
   :PROPERTIES:
   :CUSTOM_ID: understand_vmstat
   :END:      
   Understanding below command with the output 
    #+BEGIN_SRC 
    vmstat 1 1200 -n -w -S M     
    #+END_SRC
    #+BEGIN_EXAMPLE
    -n, --one-header:
              Display the header only once rather than periodically.
 
    -S, --unit character:
              Switches  outputs  between  1000 (k), 1024 (K), 1000000 (m), or 1048576 (M) bytes.  Note this
              does not change the swap (si/so) or block (bi/bo) fields.
    -w, --wide
              Wide output mode (useful for systems with higher amount of memory, where the  default  output
              mode  suffers  from  unwanted  column  breakage).  The output is wider than 80 characters per
              line.
     
    #+END_EXAMPLE
    #+BEGIN_SRC 
 
procs -----------------------memory---------------------- ---swap-- -----io---- -system-- --------cpu--------
 r  b         swpd         free         buff        cache   si   so    bi    bo   in   cs  us  sy  id  wa  st
 0  0          761          229            4          442    0    0   140   135  261    9   9   2  84   4   0
 0  0          761          225            4          446    0    0     0    80  127  370   1   0  97   1   0
 0  0          761          225            4          446    0    0     0    64  128  338   1   0  99   0   0
 1  0          761          225            4          446    0    0     0     0  106  288   1   0  99   0   0
 0  0          761          225            4          446    0    0     0     0  142  319   1   1  98   0   0
  
     #+END_SRC       
   + Processess ::
     + r - the number of processes waiting for run time 
     + b - the number of processess in sleep mode
   + Memory ::
     + swpd - the amount of virtual memory used.
     + free - amount of free/idle memory  
     + cache - the amount of memory used as cache
   + Swap :: 
     + si - Swaped in every second from disk in KB
     + so - Swapped out every second to disk in KB
   + System ::
     + in - The number of inturrupts  per second
     + cs - The number of context switches per second 

   + IO ::
       bi: Blocks received from a block device (blocks/s).
       bo: Blocks sent to a block device (blocks/s).

   + CPU ::
       These are percentages of total CPU time.
       us: Time spent running non-kernel code.  (user time, including nice time)
       sy: Time spent running kernel code.  (system time)
       id: Time spent idle.  Prior to Linux 2.5.41, this includes IO-wait time.
       wa: Time spent waiting for IO.  Prior to Linux 2.5.41, included in idle.
       st: Time stolen from a virtual machine.  Prior to Linux 2.6.11, unknown.
          

* Test cases 

** PTEST-FULLCC-001 : TEST01 - No load
*** Objective(s)
    To identify the following stats - 
    + CPU run queues
    + Swap in/out
    + Wait time for IO 
    + Memory (RAM) utilization

    when no load on College Cloud and running cluster components.

    + NOTE :: *no load* means, no user requests on college cloud

*** Description
    [[http://www.linuxcommand.org/man_pages/vmstat8.html][vmstat]] - Virtual memory stats is a command to get summary
    information on Memory, Processess, CPU, Paging etc.
    
    + Boot CC normally
    + Use the command given below to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB

*** Performance measurements
    + CPU utilization / unit
    + Memory utilization / unit
   
*** Experiment and result
    + [[./raw-data/no-load-run-1-vagrant-up.txt][Raw-Data]]
    + Graph-01 Free RAM / IDLE RAM graph
      The graph given below infers the following -
      + Free RAM / Idle RAM captured at an instance of test. (There
        were 1200 test instances since we ran =vmstat 1 1200 -n -w -S
        M= command for 1200 seconds). To understand =vmstat= command,
        please look at [[./index.org::#understand_vmstat][this example]]
      + Value for FREE RAM is graphed below -
         |------+-------------|
         | Stat | RAM (in MB) |
         |------+-------------|
         | Max  |        6904 |
         |------+-------------|
         | Min  |        6821 |
         |------+-------------|
         
      [[./graphs/free-ram-graph.png]]

    + Graph-02 Number of processes waiting for runtime 
      The graph given below infers the following -
      + Number of processes waiting for runtime at an instance of test.
     
      [[./graphs/no-of-process-waiting-for-runtime-no-load.png]]

    + Graph-03 IDLE CPU at an instance of test 
      The graph given below inferes the following -
      + IDLE CPU percentage at an instance of test. 
        [[graphs/idle-cpu.png]]

** PTEST-FULLCC-001 : TEST02 - Simple load( 20 concurrent user requests on one lab for 20 minutes)
*** Objective(s)
    To identify the following stats - 
    + CPU run queues
    + Swap in/out
    + Wait time for IO 
    + Memory (RAM) utilization

    when one lab is up and load 20 concurrent user requests for 20 minutes.



*** Description
    [[http://www.linuxcommand.org/man_pages/vmstat8.html][vmstat]] - Virtual memory stats is a command to get summary
    information on Memory, Processess, CPU, Paging etc.
    
    + Boot CC normally
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB

*** Performance measurements
    + CPU utilization / unit
    + Memory utilization / unit
   
*** Experiment and result
    + Boot CC normally 
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below on CC machine  to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
      - To understand =vmstat= command, please look at [[./index.org::#understand_vmstat][this example]]
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 20 -r 1 -t 20M http://cse01-iiith.vlabs.ac.in/
      #+END_SRC
    + Output of the above command can be found at [[./raw-data/one-lab-20-concurrent-requests-20min-siege.txt][Raw-Data]]

         

** PTEST-FULLCC-001 : TEST03 - 50 concurrent user requests on one lab for 20 minutes
*** Objective(s)
    To identify the following stats - 
    + CPU run queues
    + Swap in/out
    + Wait time for IO 
    + Memory (RAM) utilization

    when one lab is up and load 50 concurrent user requests for 20
    minutes.

*** Description
    [[http://www.linuxcommand.org/man_pages/vmstat8.html][vmstat]] - Virtual memory stats is a command to get summary
    information on Memory, Processess, CPU, Paging etc.
    
    + Boot CC normally
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB

*** Performance measurements
    + CPU utilization / unit
    + Memory utilization / unit
   
*** Experiment and result
    + Boot CC normally 
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below on CC machine  to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
      - To understand =vmstat= command, please look at [[./index.org::#understand_vmstat][this example]]
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -r 1 -t 20M http://cse01-iiith.vlabs.ac.in/
      #+END_SRC
    + Output of the above command can be found at [[./raw-data/one-lab-20-concurrent-requests-20min-siege.txt][Raw-Data]]

         

** PTEST-FULLCC-001 : TEST04 - 50 concurrent user requests on edx platform for 20 minutes
*** Objective(s)
    To identify the following stats - 
    + CPU run queues
    + Swap in/out
    + Wait time for IO 
    + Memory (RAM) utilization
   when one lab container is running and 50 concurrent user requests
   on edx home page (http://vlabs.ac.in) for 20 minutes.


*** Description
    Will be identifying CPU, Swap, Memory, etc utilization using
    *vmstat.

    [[http://www.linuxcommand.org/man_pages/vmstat8.html][vmstat]] - Virtual memory stats is a command to get summary
    information on Memory, Processess, CPU, Paging etc.
    

*** Performance measurements
    + CPU utilization / unit
    + Memory utilization / unit
   
*** Experiment and result
    + Boot CC normally 
    + Make sure edx platform is up and running.
      - If edx platform is not running,then run the below commands
        from =vlabs= user account
	#+BEGIN_EXAMPLE
        cd vagrant-boxes
        vagrant up
        vagrant up --provision
	#+END_EXAMPLE
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below on CC machine  to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
      - To understand =vmstat= command, please look at [[./index.org::#understand_vmstat][this example]]
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -t 20M http://vlabs.ac.in/
      #+END_SRC
    + Output of the above command can be found at [[./raw-data/edx-home-page-one-lab-50-concurrent-users-requests-20min.txt][Raw-Data]]

         

** PTEST-FULLCC-001 : TEST05 - 50 concurrent user requests on feedback-service for 20 minutes
*** Objective(s)
    To identify the following stats - 
    + CPU run queues
    + Swap in/out
    + Wait time for IO 
    + Memory (RAM) utilization
   when one lab container is running and 50 concurrent user requests
   on feedback service page (http://feedbac.vlabs.ac.in) for 20
   minutes.


*** Description
    Will be identifying CPU, Swap, Memory, etc utilization using
    *vmstat.

    [[http://www.linuxcommand.org/man_pages/vmstat8.html][vmstat]] - Virtual memory stats is a command to get summary
    information on Memory, Processess, CPU, Paging etc.
    

*** Performance measurements
    + CPU utilization / unit
    + Memory utilization / unit
   
*** Experiment and result
    + Boot CC normally 
    + Make sure feedback service/container is up and running.
    + Start one lab container
      #+BEGIN_SRC 
      vzctl start <CTID>
      #+END_SRC
    + Use the command given below on CC machine  to get statistics -
      #+BEGIN_SRC command
      vmstat 1 1200 -n -w -S M 
      #+END_SRC
      - To understand =vmstat= command, please look at [[./index.org::#understand_vmstat][this example]]
    + This command runs for 1200 times and returns output on screen
      every one second.
    + *-S M* is to get output in MB
    + Now, put load on the lab using *siege* command. Run the below
      command from different machine which is connected to CC through
      LAN
      #+BEGIN_SRC 
      siege -c 50 -t 20M http://feedback.vlabs.ac.in/
      #+END_SRC
    + Output of the above command can be found at [[./raw-data/feedback-plus-onelab-50-concurrent-users-requests-20min.txt][Raw-Data]]

         
