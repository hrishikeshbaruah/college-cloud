#+TITLE: Portable Edition
#+DATE: <2016-09-14 Wed>

* Introduction
  The document describes building a *Portable Edition* for
  virtual-labs.

  Portable-Edition is a portable-media( Hard Disk Drive (HDD)) which
  will have Open edX platform installed and labs ported onto it.

  Using the portable media, labs can be accessed directly from the
  local machine itself (no need of internet connection).

** Objective 
   Build the Portable-Edition on HDD and make it portable. The
   portable media can be used for accessing the labs from local
   machine (no need of internet connection).
 
* Requirements
** Portable Edition Requirements
   - Build a portable hard drive with X labs on it.
   - Create a facility for collecting logs and Collecting analytics.
* Design 
  #+CAPTION:  Portable Edition design diagram
  #+LABEL:  Portable-media-diagram
  [[./images/Design-of-Portable-Edition-2016-09-26.jpg]]


  #+CAPTION:  Portable Edition's Cluster diagram
  #+LABEL:  Portable-media Cluster Design diagram
  [[./images/Portable-media-cluster-design.jpg]]
     
   
  - Wi-Fi Router :: Wi-Fi router resolves the domain name(FQDN) of the
              labs within the LAN network. And it allocates dhcp ips
              to the Vagrant boxes and to the users who wants to acces
              the labs. Configure the wi-fi router such that it has to
              provide 10.2.57.0/24 subnet ip range to its clients.

  - Portable edition of Virtual Labs :: 
       A portable edition, which contains Open edX platform and ported
       labs onto it. One vagrant box will be used for Open edX
       platform.

       
       Static IP (10.2.57.61) will be assigned to this machine.

    + Vagrant Box (Open edX platform) ::
	 Virtual-Labs portable edition ,this box provides us Open edX
         platform with the labs ported onto it. For the simulations of
         experiments and for the images, this box contacts to
         *Cluster* for the labs over the LAN.

	 Static IP(10.2.57.65) is to be assigned to this box.
  
    + Cluster :: 
		 It runs on localhost (Host machine) and serves labs
                 to the Open edX platform. In this cluster, labs are
                 hosted/deployed locally on OpenVZ containers and also
                 runs server nodes. Each lab will have a separate
                 container so that we can avoid memory leakage issues
                 of the labs.
		 - Cluster server nodes are 
		   + Router :: is for forwarding incoming packets to
                               respective server nodes
		   + Reverse proxy :: Accepts http and https packets
                                      from router and forwards these
                                      packets to respective labs.
		   + Public DNS :: For external name resolution 
		   + Private DNS :: For internal name resolution

		   + ADS :: A service for hosting new labs inside the
                            cluster
	          
                   + Config-Server :: To configure cluster with
                                      automated scripts using ansible
                                      playbooks

	 Static IP(10.2.57.62) is to be assigned to Router container.
	 Static IP(10.2.57.63) is to be assigned to Config-server container.

  - ELK stack :: ELK(Elasticsearch,Logstash and Kibana) stack runs on
                 localhost. ELK is responsible for collecting the logs
                 and showing the analytics of the labs. 
		 
		 ELK will be used by analytics-api service

    + Elasticsearch - A storage, No Sql database. It acts as backend
      data store for logstash.
    + Logstash - A log processor, can process any data - from any source
    + Kibana - Analytics visualization tool. Acts as a frontend tool
      to logstash
  - DNS service :: Runs in separate container on localhost. This
                   service will be used by Wi-Fi router for name
                   resolution( To map IP with FQDN).
		   
		   DNS service will be configured using ansible
                   playbooks from config-server. Use =public_dns.yml=
                   playbook to configure DNS service
		   
		   Static IP :: 10.2.57.64
  
   - Analytics to be captured from portable hardrive version. [[https://github.com/openedx-vlead/portable-media/issues/2][Read link]]
   - Analytics to be fetched from portble hardrive version.  [[https://github.com/openedx-vlead/portable-media/issues/2][Read link]]
  - Nagios :: Nagios is a monitoring tool. Job of the nagios in this
              setup is to monitor system resources such as RAM,
              Processes,etc.
  

* Implementation 
  Implementation is done based on the above design diagram.
  We need internet connection for
  - Setting up cluster
  - Hosting the labs in the cluster using ADS service
** Machine setup
   - Install CentOS--6.x Desktop
   - Update OS
     #+BEGIN_EXAMPLE
     yum update -y
     #+END_EXAMPLE

** Cluster setup
   - Use [[https://bitbucket.org/vlead/systems-model/src/97cc25543f8032cb84c1372c4c9ca170945f79a6/src/bootstrapping.org?at%3Ddevelop&fileviewer%3Dfile-view-default][bootstrapping steps]] for setting up cluster.
     Cluster will have OpenVZ containers. Each server node will have
     a separate container and also for each lab.

     In this cluster setup we have not used all server nodes. So
     comment =nagios_server=, =nagios_client=, =rsnapshot_server=,
     =rsnapshot_client=, =ossec_server= and =ossec_client= roles in
     following playbooks before running them.

     In this cluster setup, we used only following server nodes.
     + Config-Server
     + Router
     + Public DNS
     + Private DNS 
     + Reverse proxy
     + ADS service

    
       NOTE :: All other server nodes are not necessary( may not be
       needed ) such that we can reduce the load on the machine.

** DNS service configuration
   - Create a separate OpenVZ container for dns service 
     #+BEGIN_EXAMPLE
     vzctl create 1010 --ostemplate centos-6-x86_64  --hostname dns.vlabs.ac.in
     vzctl set 1010 --netif_add eth0,,,,br0  --save 
     vzctl set 1010 --onboot yes --save
     vzctl start 1010
     #+END_EXAMPLE
   - Configure network in dns container
     + Enter into the container
       #+BEGIN_EXAMPLE
       vzctl enter 1010
       #+END_EXAMPLE
     + Open/create the file 
       #+BEGIN_EXAMPLE
       vim /etc/sysconfig/network-scripts/ifcfg-eth0
       #+END_EXAMPLE
     + Update above file with 
       #+BEGIN_EXAMPLE
       DEVICE=eth0
       TYPE=Ethernet
       HWADDR=<MAC address of the eth0 interface>
       BOOTPROTO=static
       ONBOOT=yes
       NM_CONTROLLED=no
       IPADDR=<ip-address>
       NETMASK=<netmask>
       GATEWAY=<gateway>
       DNS1=<external-dns1>
       DNS2=<external-dns2>
       #+END_EXAMPLE

    + Enable SSH access to root account from config-server
    + Run =public_dns.yml= playbook from config-server to configure
      dns service which is outside the cluster.
      #+BEGIN_EXAMPLE
      vlead$cd systems-model/build/edx/
      vlead$vim dns.txt     # inventory file for DNS service node
      #+END_EXAMPLE
      - Add the following lines to that file
	#+BEGIN_EXAMPLE
	[public_dns]
	192.168.2.5        # DNS service node ip address
	#+END_EXAMPLE
      - Run =public_dns.yml=
	#+BEGIN_EXAMPLE
	vlead$ansible-playbook -i dns.txt public_dns.yml
	#+END_EXAMPLE
    + Change =/etc/resolv.conf= file 
      #+BEGIN_EXAMPLE
      vim /etc/resolv.conf
      and add
      nameserver 127.0.0.1    # as localhost has become name server 
      #+END_EXAMPLE
    + You are done configuring DNS service

** Open edX platform in a Vagrant Box 
   - NOTE :: 
     + Minimum 1 Mbps download speed is needed.
     + Need stable internet and network proxies if there are any.
  
   - Install [[http://www.vagrantup.com/downloads.html][Vagrant]] 1.6.5 or later 
     #+BEGIN_EXAMPLE
     wget https://releases.hashicorp.com/vagrant/1.8.6/vagrant_1.8.6_x86_64.rpm
     sudo rpm -i vagrant_1.8.6_x86_64.rpm
     #+END_EXAMPLE
   - Install [[https://www.virtualbox.org/wiki/Downloads][VirtualBox]] 4.3.12 (i386) or later
     #+BEGIN_EXAMPLE
     wget http://download.virtualbox.org/virtualbox/5.1.6/VirtualBox-5.1-5.1.6_110634_el6-1.x86_64.rpm
     sudo rpm -i VirtualBox-5.1-5.1.6_110634_el6-1.x86_64.rpm
     #+END_EXAMPLE
   - install other requirements 
     #+BEGIN_EXAMPLE
     sudo apt-get install virtualbox-dkms virtualbox-guest-dkms
     #+END_EXAMPLE
   - Install other dependencies if there are any
     #+BEGIN_EXAMPLE
     sudo apt-get install -f 
     #+END_EXAMPLE
   - Add/Get a ubuntu 14.04 LTS box to vagrant box list
     #+BEGIN_EXAMPLE
     vagrant box add ubuntu/trusyt64
     #+END_EXAMPLE
   - Create a Vagrant box with the Ubutnu-14.04 LTS
     #+BEGIN_EXAMPLE
     vagrant init
     #+END_EXAMPLE
   - The above command generates basic Vagrantfile and modify the file
     with the following info
     #+BEGIN_EXAMPLE
     base = "ubuntu/trusty64"
     #+END_EXAMPLE
     And also you can change the other required parameters in
     Vagrantfile ( as per your requirement) 
   - Install Open edX platform
     1. SSH to Vagrant box that was created just now
	#+BEGIN_EXAMPLE
	vagrant ssh
	#+END_EXAMPLE
     2. Install Packages
	#+BEGIN_EXAMPLE 
	sudo apt-get install -y build-essential software-properties-common python-software-properties curl git-core libxml2-dev libxslt1-dev libfreetype6-dev python-pip python-apt python-dev libxmlsec1-dev swig libmysqlclient-dev
	sudo pip install --upgrade pip
	sudo pip install paramiko==1.10
	#+END_EXAMPLE

     3. Clone configuration repository
	#+BEGIN_EXAMPLE 
	cd /var/tmp
	git clone https://github.com/edx/configuration
	#+END_EXAMPLE

     4. Choose the release
	#+BEGIN_EXAMPLE
	export OPENEDX_RELEASE=named-release/dogwood.3 
	#+END_EXAMPLE

	OR
	+ Checkout to the release verion of configuration repository
          #+BEGIN_EXAMPLE
          cd /var/tmp/configuration
          git checkout <version>
          git checkout  named-release/dogwood.3 #example
          #+END_EXAMPLE

     5. Configure password based SSH authentication
	Edit the =main.yaml= to and set =COMMON_SSH_PASSWORD_AUTH= to =yes= 
	#+BEGIN_EXAMPLE
	sudo vim =configuration/playbooks/roles/common_vars/defaults/main.yml
	COMMON_SSH_PASSWORD_AUTH = yes
	#+END_EXAMPLE

     6. Install the ansible requirements 
       
	#+BEGIN_EXAMPLE 
	cd /var/tmp/configuration
	sudo pip install -r requirements.txt
	sudo pip install setuptools --upgrade
	#+END_EXAMPLE

     7. Run the playbook
	#+BEGIN_EXAMPLE 
	cd /var/tmp/configuration/playbooks && sudo ansible-playbook -c local ./edx_sandbox.yml -i "localhost,"
	#+END_EXAMPLE

     8. The above command will copy the platform files and runs various ansible
	playbooks to setup the platform.  When there are zero failures displayed
	in the status, the installation is successful.
  
     9. Platform is ready, 
	+ LMS is accessible on port 80
          #+BEGIN_EXAMPLE
          http://<public-ip> # courses dashboard
          #+END_EXAMPLE

	+ CMS is accessible on port 18010
          #+BEGIN_EXAMPLE
          http://<public_ip>:18010    # Studio
          #+END_EXAMPLE

     10. Login
	 A default user =staff@example.com= comes with the installation.  This
	 login is used to quickly test the instalaltion.  The password is =edx=
 
     11. Reference
	 + [[https://github.com/openedx-vlead/port-labs-to-openedx/tree/develop/src/platform-install-configure][Open edX platform  installation using Manual steps provided
           by VLEAD]]  
	 + [[https://openedx.atlassian.net/wiki/display/OpenOPS/Native+Open+edX+Ubuntu+12.04+64+bit+Installation][Native Open edX installation on Ubuntu 12.04 64-bit]]
** One stop solution for setting up Open edX platform using vagrantbox
  - Get the Vagrantfile from http://files.vlabs.ac.in
    #+BEGIN_EXAMPLE
    wget http://files.virtual-labs.ac.in/downloads/open-edx-vagrant-boxes/Vagrantfile
    #+END_EXAMPLE
  - Get the vagrant box 
    #+BEGIN_EXAMPLE
    wget http://files.virtual-labs.ac.in/downloads/open-edx-vagrant-boxes/open-edx-platform-installed-2016-09-19.box
    #+END_EXAMPLE
  - Add downloaded box to vagrant box list 
    #+BEGIN_EXAMPLE
    vagrant box add edx-platform-installed-2016-09-19 open-edx-platform-installed-2016-09-19.box
    #+END_EXAMPLE
  - Run Open edX platform 
    #+BEGIN_EXAMPLE
    vagrant up
    #+END_EXAMPLE
  - That's all, you are ready to use Open edX platform.
	
** Install ELK on host machine
   #+BEGIN_EXAMPLE
   # install java-1.8 version
   yum install java-1.8.0-openjdk.x86_64

   # Get ELK rpm packages 
   wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/rpm/elasticsearch/2.4.1/elasticsearch-2.4.1.rpm
   wget https://download.elastic.co/kibana/kibana/kibana-4.6.1-x86_64.rpm
   wget https://download.elastic.co/logstash/logstash/packages/centos/logstash-2.4.0.noarch.rpm
   wget https://download.elastic.co/beats/filebeat/filebeat-1.3.1-x86_64.rpm


   # Install elasticsearch
   rpm -i elasticsearch-2.4.1.rpm 
   service elasticsearch start   
   chkconfig elasticsearch on

   # Install filebeat
   rpm -i filebeat-1.3.1-x86_64.rpm 
   service filebeat start
   chkconfig filebeat on
   

   # Install Kibana
   rpm -i kibana-4.6.1-x86_64.rpm 
   service kibana start
   chkconfig kibana on

   # Install Logstash
   rpm -i logstash-2.4.0.noarch.rpm 
   service logstash start
   chkconfig logstash on

   #+END_EXAMPLE
** Install Nagios on host machine
   #+BEGIN_EXAMPLE
   yum install nagios nagios-plugins-all.x86_64 nagios-plugins-nrpe nrpe
   

   vim /etc/nagios/nrpe.cfg # Change the allowed_hosts values to 127.0.0.1,10.2.57.61
   service nrpe resstart
   service nrpe restart
   service nagios restart

   chkconfig nagios on
   chkconfig nrpe on
   #+END_EXAMPLE
*** Set nagiosadmin user passowrd
    #+BEGIN_EXAMPLE
    htpasswd -C /etc/nagios/passwd nagiosadmin
    #+END_EXAMPLE
    and access the nagios web console using =localhost/nagios= and
    provide user name and password.
** Install OpenVZ web console
   #+BEGIN_EXAMPLE
   git clone https://github.com/sibprogrammer/owp.git
   cd owp/build
   sh build.sh
   
   cd ..
   cd installer
   sh ai.sh
   
   #+END_EXAMPLE
   Then access the web console using =localhost:3000= by providing
   credentials
   user name: admin  password:admin.   Change the password if you want

* Deployment 
  - [[./user-manual-for-portablemedia.org][Check the Portable-Media user manual]]
  
* GitHub Issues
  - [[https://github.com/openedx-vlead/portable-media/issues/1][Cluster and Open edX Platform setup]]
  - [[https://github.com/openedx-vlead/portable-media/issues/2][Analytics for the portable media]]
* Test Cases
  [[https://github.com/openedx-vlead/portable-media/issues/1#issuecomment-250976103][Basic Test]]
* Proposed and changed designed plans
  [[https://github.com/openedx-vlead/portable-media/blob/master/src/meeting-minutes.org#proposed-and-changed-designed-plans][Design plans]]

* COMMENT Memory Leakage labs
  - What could be the solution for hosting memory leakage labs on
    personal edition? 
    
    Solution could be:
    for Vagrant box *Vagrant box down* and *vagrant box up* and 
    for Personal edition, *shutdown and restart the machine*

  - How to find out the labs that are causing the memory leakage? 
  - Can we create OpenVZ/Docker containers for the memory leakage
    labs? is it a good idea?


